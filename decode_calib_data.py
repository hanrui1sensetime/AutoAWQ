from transformers import AutoTokenizer
import json_lines

tokenizer = AutoTokenizer.from_pretrained('/root/workspace/external_data/tigerbot-13b-base_v9_gpt4_hf')

calib_file = '/root/workspace/external_data/tigerbot-13b-base_v9_gpt4_hf/tigerbot-13b-v9-gpt4.jsonl'
decode_lines = []
# line = '阶段小结：\n\n{‘患者姓名’: ‘李四’, ‘性别’: ‘男’, ‘年龄’: ‘65 岁’, ‘科室’: ‘神经内科’, ‘入院日期’: ‘2023 年 3 月 10 日’, ‘小结日期’: ‘2023 年 4 月 1 日’, ‘主诉’: {‘入院情况’: ‘患者突发右侧肢体无力、言语不清，持续半小时。体温 36.5度，脉搏 88 次/分，呼吸 20 次/分，血压150/90mmHg，神志清楚。右侧面部肌力减弱，口角歪斜，右上肢肌力0级，右下肢肌力1级，右侧肌张力增高，右侧腱反射亢进，右侧病理征阳性。左侧肢体活动正常。言语不清，流涎多。颈动脉未触及异常搏动。心律齐，心音正常，未闻及杂音。双肺呼吸音清，未闻及干湿啰音。腹软，未触及包块，肝脾肋下未触及。双下肢无水肿。’, ‘入院诊断’: ‘1.急性缺血性脑卒中（左侧大脑中动脉区）；2.高血压病3级（高危）；3.高血脂。’, ‘诊疗经过’: ‘入院后完善相关检查，如头颅CT提示左侧大脑中动脉区缺血性梗死灶；颈部彩超示双侧颈内动脉斑块形成；心电图示窦性心律、左心室高电压；血常规示白细胞计数增高、中性粒细胞比例增高；生化检查示血清总胆固醇、甘油三酯、低密度脂蛋白胆固醇水平升高。治疗上予静脉溶栓、抗凝、抗血小板、降压、降脂、改善脑代谢等治疗，并配合物理治疗、康复训练等措施。经治疗后患者右侧肢体无力有所改善，目前右上肢肌力2级，右下肢肌力3级；言语不清有所缓解，能说出简单的词语；口角歪斜减轻；其他情况无明显变化。’, ‘目前情况’: ‘T:36.4度，P:80 次/分，R:18 次/分，Bp:130/80 mmHg，一般情况尚可。右侧面部肌力仍减弱，口角仍歪斜，右上肢肌力2级，右下肢肌力3级，右侧肌张力仍增高，右侧腱反射仍亢进，右侧病理征仍阳性。言语仍不清，流涎仍多。颈动脉未触及异常搏动。心律齐，心音正常，未闻及杂音。双肺呼吸音清，未闻及干湿啰音。腹软，未触及包块，肝脾肋下未触及。双下肢无水肿。’, ‘目前诊断’: ‘1.急性缺血性脑卒中（左侧大脑中动脉区）；2.高血压病3级（高危）；3.高血脂。’, ‘诊疗计划’: ‘继续静脉溶栓、抗凝、抗血小板、降压、降脂、改善脑代谢等治疗，并配合物理治疗、康复训练等措施。患者一般情况尚可，但仍有明显的神经功能缺损，需加强康复训练，促进功能恢复。患者有高血压、高血脂等危险因素，需规范用药、控制饮食、戒烟限酒、适当运动等预防措施，防止再发脑卒中。’}'
# line = [33892, 450, 44574, 35945, 32131, 29871, 518, 32746, 33737]
line_fp16 = [35039, 34193, 44574, 35945, 33892, 32131,   518, 29871, 32746, 33737]
line_fp16_32131_next = [37411, 36440, 32153, 54992, 31389, 45162, 32016, 32307, 30783, 36464,
        32375, 32165, 32284, 32020, 32190, 31999, 36322, 37412]
line_fp16_33737_next = [45162, 31999, 54992, 36051, 32375, 36322]
line_int4_33737_next = [29871, 33737]
line_int4_33737_29871_next = [30705, 38507, 29955, 30383, 55541, 38917, 54704, 30214, 29953, 32375,
        32561, 29945, 29946, 42566, 29900, 29941, 30419, 29906, 29896,    13]
calib_16384_next = [36344,  1094, 32131,   518, 32746,   910, 42531, 47654, 11221, 33892,
        16564, 35945, 29871,   450, 33737, 34193,   306]
case_49_flash_attn = [ 3645, 32131, 33892, 44574,   910, 32746, 11221, 29871, 16564, 33737,
          450]

case1 = [29871]
answer = [29871, 32375, 30752, 30963, 33014, 33846, 30214, 32375, 29906, 29900,
         29896, 29945, 29899, 29941, 29899, 29946, 30325, 31570, 29908, 34396,
         30429, 38917, 38676, 29908, 30909, 31066, 30963, 30448, 30448, 55520,
         55274, 32561, 30214, 30858, 55117, 31649, 55843, 29945, 29906,  4912,
         31830, 56995, 30988, 46308, 30257, 55963, 30658, 55623, 34007, 32212,
         55352, 54727, 29900, 29889, 29947,  4912, 53717, 30214, 33620, 48238,
         31331, 32558, 32708, 30214, 33620, 48238, 54846, 54844, 44299, 30267,
         31570, 32375, 41008, 31227, 30931, 55879, 30853, 30214, 31969, 31295,
         30448, 31704, 54830, 30267, 54899, 31227, 30931, 55879, 30853, 35464,
         30822, 32756, 30448, 55520, 55274, 30214, 54704, 56657, 31548, 31704,
         54830, 29906, 54870, 30214, 43219, 33492, 54932, 55900, 33079, 55554,
         30267,  1783, 29901, 55520, 30988, 30257, 55963, 55252, 41169, 54667,
         55603, 30952, 54704, 56657, 30214, 55520, 26270, 55508, 31436, 56135,
         55427, 54842, 32614, 31608, 31651, 55709, 30429, 55735, 32502, 30636,
         50733, 54072, 30267, 29946, 29889, 29941, 40158, 36155, 54704, 30467,
         30448, 29931, 29899, 52388, 50511, 54669, 30214, 55092, 31213, 30383,
         55541, 30330, 55700, 30330, 56996, 30330, 55994, 30214, 33729, 55534,
         50951, 34191, 30214, 53986, 55571, 55413, 30330, 47779, 31184, 50951,
         54072, 30214, 55092, 31213, 50951, 34440, 32417, 38594, 56135, 55427,
         54842, 30214, 55520, 31109, 31295, 31436, 32417, 55568, 30257, 42191,
         31320, 30267, 30448, 29931, 29899, 50511, 30952, 54829, 54890, 55520,
         42440, 30419, 55042, 29902, 30607, 51620, 30409, 29974, 29928, 29906,
         42191, 31320, 51816, 54669, 30267, 38507, 43219, 30383, 30015, 55520,
         47969, 42440, 43554, 30024, 30383, 55520, 56995, 30988, 30257, 55963,
         55252, 54932, 55900, 33079, 55554, 30419, 41169, 30883, 30409, 30214,
         56044, 54960, 54670, 56135, 55427, 31066, 34381, 32173, 30214, 38594,
         33366, 31608, 30429, 31757, 54890, 30330, 30557, 31757, 54890, 31436,
         31222, 55427, 54784, 50951, 55554, 55079, 31436, 31608, 30015, 30622,
         29946, 31263, 42191, 31320, 30024, 29906, 56190, 36166, 30622, 29945,
         31263, 42191, 31320, 30024, 29906, 56190, 36166, 30622, 29953, 31263,
         42191, 31320, 30024, 29906, 56190, 36166, 30622, 29955, 30330, 29947,
         30330, 29929, 31263, 42191, 31320, 30024, 29941, 56190, 36166, 30622,
         29896, 29896, 31263, 42191, 31320, 30024, 29906, 56190, 31436, 30015,
         30622, 29896, 31263, 42191, 31320, 33242, 30622, 29896, 29906, 31263,
         42191, 31320, 30024, 34478, 34381, 32173, 54784, 50951, 55554, 34260,
         31608, 30015, 30622, 29941, 31263, 42191, 31320, 30024, 30573, 56996,
         55735, 32173, 30267, 38507, 32684, 30682, 30267, 29906, 29900, 29896,
         29945, 29889, 29945, 29889, 29947, 30330, 29953, 29889, 29896, 29896,
         30330, 29955, 29889, 29947, 30330, 29947, 29889, 29896, 30330, 29929,
         29889, 29941, 30325, 30672, 31030, 30448,  7024, 32413, 46553, 30419,
         44267, 56443, 56093, 29906, 29896, 29900, 40100, 20444, 29887,   698,
           270, 29896, 29974, 55462, 31033, 55029, 29953, 29900, 40100, 21000,
           772, 29930, 29896, 29946, 29881, 30409, 30214, 31352, 32417, 41667,
         41974, 30330, 50560, 35595, 30330, 49113, 47484, 31184, 38676, 30214,
         33057, 30573, 32756, 46553, 30752, 30963, 30267, 31101, 30275, 32375,
         30648, 30989, 30214, 32370, 30682, 30214, 55520, 54950, 55712, 54934,
         30214, 35127, 30682, 30214, 30685, 54763, 31352, 55469, 30214, 35528,
         31352, 32417, 32622, 30267,    13,    13, 32375, 30752, 30963, 30822,
         32748, 32101, 32561, 30214, 35987, 46553, 42655, 30822, 30214, 29906,
         29900, 29896, 29945, 29899, 29929, 29899, 29941, 29900, 30448,  7024,
         32413, 46553, 30419, 55466, 56443, 56093, 29906, 29896, 29900, 29871,
         40100,   440, 29887,   698, 29881, 29896, 29974, 55462, 31033, 55029,
         29953, 29900, 40100, 23883,   772, 29930, 29896, 29946, 29881, 30409,
         46553, 30214, 32375, 33098, 30682, 30214, 31424, 32375, 46553, 32749,
         30214, 32270, 32058, 33847, 30214, 31412, 40202, 34466, 34132, 35435,
         41431, 54773, 55158, 30267,    13,    13, 36322, 33158, 43219, 30415,
         33376, 33483, 30383,    13,    13, 29899, 33129, 55404, 30383, 29953,
         29900, 54926,    13, 29899, 49617, 30383, 32777,    13, 29899, 29871,
         32595, 30383, 52388,    13, 29899, 29871, 43219, 32455, 30383, 55735,
         55554,    13, 29899, 29871, 34440, 35261, 30383, 55520, 30214, 55520,
         30988,    13, 29899, 29871, 34440, 42478, 30383, 29911, 29946, 29874,
           405, 29900,    13,    13, 36322, 32234, 32413, 30392,  7024, 32413,
         46553, 30214, 32171, 55466, 56443, 56093, 30503, 55462, 31033, 55029,
         30267, 46553, 32689, 32375, 32006, 32110, 35343, 41667, 41974, 30330,
         50560, 35595, 31391, 49113, 47484, 31184, 38676, 30267, 46553, 32749,
         30594, 30214, 36322, 32270, 32058, 33847, 30267,    13,    13, 32165,
         36322, 33158, 43219, 30415, 33376, 30214, 35759, 37310, 32396, 33973,
         30383,    13,    13, 29896, 29889, 51414, 54699, 34638, 33871, 36322,
         35522, 32424, 30214, 34504, 53875, 54844, 35409, 31184, 33052, 30214,
         37089, 32647, 32422, 32234, 32413, 30267,    13, 29906, 29889, 33737,
         36322, 35522, 30214, 52896, 32016, 46700, 32903, 31391, 31182, 54783,
         31184, 32234, 30267,    13, 29941, 29889, 29871, 36322, 33037, 33216,
         32039, 32412, 32209, 30214, 52896, 33037, 32135, 32234, 30267,    13,
         29946, 29889, 33737, 36322, 32440, 33216, 30214, 52896, 32016, 32114,
         34422, 32234, 30214, 30847, 34237, 32234, 31391, 54135, 32234, 30267,
            13,    13, 52491, 30214, 32287, 32396, 38562, 30214, 39668, 32234,
         32413, 31370, 31272, 32125, 33001, 32165, 36322, 47500, 30805, 33413,
         30267, 60519]
'''Based Based 根据 Given The The 根据　Given 对于 Based
'''
case_49_flash_attn_prob = [0.0174, 0.0199, 0.0204, 0.0402, 0.0503, 0.0556, 0.0983, 0.1005,
        0.1717, 0.1963, 0.2295]
[print(len(tokenizer.decode(answer).strip()))]

'''
with open(calib_file, 'r') as f:
    for line in json_lines.reader(f):
        decode_line = tokenizer.decode(line['input_ids'])
        decode_lines.append(decode_line)

decode_calib_file = '/workspace/AutoAWQ/tigerbot-13b-v9-gpt4-decode.txt'

with open(decode_calib_file, 'w') as f:
    for line in decode_lines:
        if '治疗' in line or '康复' in line or '症' in line or '病' in line:
            f.write(line)
'''
